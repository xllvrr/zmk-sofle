#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        GHEnter {
            bindings = <&kp ENTER>;
            key-positions = <31 33>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4          &kp N5       &kp UP_ARROW     &kp N6     &kp N7         &kp N8      &kp N9   &kp N0      &kp MINUS
&kp TAB     &kp Q      &kp W         &kp E         &kp R           &kp T        &kp DOWN_ARROW   &kp Y      &kp U          &kp I       &kp O    &kp P       &kp BSLH
&kp GRAVE   &kp A      &kp S         &kp D         &kp F           &kp G        &kp LEFT_ARROW   &kp H      &kp J          &kp K       &kp L    &kp SEMI    &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V           &kp B        &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA   &kp DOT  &kp FSLH    &kp EQUAL
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp SPACE    &mo 1            &kp SPACE  &kp BACKSPACE  &kp RETURN  &tog 2   &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "DFLT";
        };

        layer1 {
            bindings = <
&kp F11     &kp F1  &kp F2     &kp F3       &kp F4       &kp F5         &mmv MOVE_UP     &kp F6     &kp F7    &kp F8    &kp F9     &kp F10  &kp F12
&trans      &trans  &mkp LCLK  &mkp MCLK    &mkp RCLK    &trans         &mmv MOVE_DOWN   &trans     &kp END   &kp UP    &kp HOME   &trans   &trans
&trans      &trans  &trans     &trans       &trans       &trans         &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &trans
&trans      &trans  &trans     &trans       &trans       &trans         &mmv MOVE_RIGHT  &trans     &trans    &trans    &trans     &trans   &trans
&kp C_MUTE  &trans  &trans     &kp C_POWER  &kp C_RESET  &kp C_SLEEP    &none            &trans     &trans    &trans    &trans     &trans
            >;

            display-name = "FN";
            sensor-bindings = <&scroll_encoder>;
            label = "FN";
        };

        layer2 {
            display-name = "CODE";
            bindings = <
&kp GRAVE          &kp N1     &kp N2        &kp N3        &kp N4          &kp N5       &kp UP_ARROW     &kp N6     &kp N7         &kp N8      &kp N9   &kp N0      &kp MINUS
&kp LEFT_BRACKET   &kp Q      &kp W         &kp E         &kp R           &kp T        &kp DOWN_ARROW   &kp Y      &kp U          &kp I       &kp O    &kp P       &kp BSLH
&kp RIGHT_BRACKET  &kp A      &kp S         &kp D         &kp F           &kp G        &kp LEFT_ARROW   &kp H      &kp J          &kp K       &kp L    &kp SEMI    &kp APOS
&kp LSHFT          &kp Z      &kp X         &kp C         &kp V           &kp B        &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA   &kp DOT  &kp FSLH    &kp EQUAL
&kp C_MUTE         &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp SPACE    &none            &kp SPACE  &kp BACKSPACE  &kp RETURN  &tog 2   &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
    };
};
